{"ast":null,"code":"export default {\n  name: 'Timetable',\n\n  data() {\n    return {\n      // To determine whenever the timetable matrix is parsed or not\n      parsed: false,\n      // The timetable 2D matrix\n      timetable: [[]],\n      // The days in a week\n      days: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n      // The time period\n      period: ['0830-0930', '0930-1030', '1030-1130', '1130-1230', '1230-1330', '1330-1430', '1430-1530', '1530-1630', '1630-1730', '1730-1830'],\n      // courses information  (save in database)\n      courses: [] // courses: [\n      //     // CSCI3130\n      //     {\n      //         courseCode:'CSCI3130',\n      //         times:[\n      //             {day:'Mo', start:'1630', end:'1815'},\n      //             {day:'Tu', start:'1630', end:'1715'},\n      //             {day:'Th', start:'1730', end:'1815'}\n      //         ],\n      //         color: '#F3B03D'\n      //     },\n      //     // CSCI3150\n      //     {\n      //         courseCode:'CSCI3150',\n      //         times:[\n      //             {day:'Tu', start:'1230', end:'1415'},\n      //             {day:'We', start:'1030', end:'1115'},\n      //             {day:'Th', start:'1630', end:'1715'}\n      //         ],\n      //         color: '#D5D5D5'\n      //     },\n      //     // CSCI3160\n      //     {\n      //         courseCode:'CSCI3160',\n      //         times:[\n      //             {day:'We', start:'1130', end:'1315'},\n      //             {day:'Th', start:'1130', end:'1215'},\n      //             {day:'Th', start:'1330', end:'1415'}\n      //         ],\n      //         color: '#71C0F9'\n      //     },\n      //     // ESTR3108\n      //     {\n      //         courseCode:'ESTR3108',\n      //         times:[\n      //             {day:'Tu', start:'1430', end:'1615'},\n      //             {day:'We', start:'1730', end:'1815'},\n      //             {day:'Th', start:'0930', end:'1115'}\n      //         ],\n      //         color:'#F19BC8'\n      //     },\n      //     // UGEB2530\n      //     {\n      //         courseCode:'UGEB2530',\n      //         times:[{day:'We', start:'1430', end:'1715'}],\n      //         color: '#97F9EA'\n      //     },\n      //     // UGEC2945\n      //     {\n      //         courseCode:'UGEC2945',\n      //         times:[{day:'Mo', start:'1430', end:'1615'}],\n      //         color: '#A5F66A'\n      //     },\n      //     // GEWS1000\n      //     {\n      //         courseCode:'GEWS1000',\n      //         times:[{day:'Fr', start:'1130', end:'1315'}],\n      //         color: '#FDEF71'\n      //     }\n      // ]\n\n    };\n  },\n\n  methods: {\n    // Transfer the days to specific numbers\n    dayToNumber(day) {\n      switch (day) {\n        case 'Mo':\n          return 1;\n\n        case 'Tu':\n          return 2;\n\n        case 'We':\n          return 3;\n\n        case 'Th':\n          return 4;\n\n        case 'Fr':\n          return 5;\n\n        case 'Sa':\n          return 6;\n\n        case 'Su':\n          return 7;\n\n        default:\n          return -1;\n      }\n    },\n\n    // Initalise the timetable array\n    initTimetable() {\n      let element = {\n        courseCode: '',\n        color: 'transparent',\n        span: 1\n      };\n\n      for (let i = 0; i < 10; i++) {\n        this.timetable[i] = [];\n\n        for (let j = 0; j < 5; j++) {\n          this.timetable[i][j] = element;\n        }\n      } // update the timetable matrix\n\n\n      this.updateTimetable();\n    },\n\n    // Get the courses data and place the event into timetable matrix\n    updateTimetable() {\n      this.courses.forEach(c => {\n        // for each courses\n        let {\n          courseCode,\n          times,\n          color\n        } = c;\n        times.forEach(t => {\n          // for each course period\n          let {\n            day,\n            start,\n            end\n          } = t;\n          start = Math.floor(parseInt(start) / 100); // starting time represents in number\n\n          end = Math.floor(parseInt(end) / 100); // ending time represents in number\n\n          day = this.dayToNumber(day); // day number\n\n          let span = end - start; // number of rows have to span\n\n          let element = {\n            courseCode,\n            color,\n            span\n          }; // the element in timetable matrix\n\n          this.timetable[start - 8].splice(day - 1, 1, element); // place the element into timetable matrix\n          // if there is a span, set the covered element's span to 0\n\n          for (let i = 1; i <= span - 1; i++) {\n            element = {\n              courseCode: '',\n              color: '',\n              span: 0\n            };\n            this.timetable[start - 8 + i].splice(day - 1, 1, element); // place the element into timetable matrix\n          }\n        });\n      });\n      this.parsed = true; // the timetable was parsed\n    },\n\n    // Return the elements from timetable array\n    getElement(e, i, j) {\n      if (!this.parsed) {\n        return '';\n      }\n\n      switch (e) {\n        case 'courseCode':\n          return this.timetable[i][j].courseCode;\n\n        case 'color':\n          return this.timetable[i][j].color;\n\n        case 'span':\n          return this.timetable[i][j].span;\n\n        case 'repeat':\n          return this.timetable[i][j].span !== 0;\n\n        default:\n          return null;\n      }\n    },\n\n    // [Ajax Req] Get courses information\n    getCourses() {\n      fetch('http://127.0.0.1:8081/timetable').then(res => {\n        return res.json();\n      }).then(json => {\n        // console.log(json)\n        this.courses = json;\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n\n  },\n\n  mounted() {\n    this.$nextTick(this.getCourses);\n    this.$nextTick(this.initTimetable()); // this.getCourses()\n  }\n\n};","map":{"version":3,"mappings":"AAiCA;EACAA,iBADA;;EAEAC;IACA;MACA;MACAC,aAFA;MAGA;MACAC,eAJA;MAKA;MACAC,8DANA;MAOA;MACAC,SACA,WADA,EACA,WADA,EACA,WADA,EACA,WADA,EACA,WADA,EAEA,WAFA,EAEA,WAFA,EAEA,WAFA,EAEA,WAFA,EAEA,WAFA,CARA;MAYA;MACAC,WAbA,CAcA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IAzEA;EA2EA,CA9EA;;EA+EAC;IACA;IACAC;MACA;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;MAhBA;IAkBA,CArBA;;IAuBA;IACAC;MACA;QAAAC;QAAAC;QAAAC;MAAA;;MACA;QACA;;QACA;UACA;QACA;MACA,CAPA,CAQA;;;MACA;IACA,CAlCA;;IAoCA;IACAC;MACA;QAAA;QACA;UAAAH;UAAAI;UAAAH;QAAA;QACAG;UAAA;UACA;YAAAC;YAAAC;YAAAC;UAAA;UAEAD,0CAHA,CAGA;;UACAC,sCAJA,CAIA;;UACAF,4BALA,CAKA;;UAEA,uBAPA,CAOA;;UACA;YAAAL;YAAAC;YAAAC;UAAA,EARA,CAQA;;UACA,sDATA,CASA;UAEA;;UACA;YACAM;cAAAR;cAAAC;cAAAC;YAAA;YACA,0DAFA,CAEA;UACA;QACA,CAhBA;MAiBA,CAnBA;MAoBA,mBArBA,CAqBA;IACA,CA3DA;;IA6DA;IACAO;MACA;QACA;MACA;;MACA;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;MAVA;IAYA,CA9EA;;IAgFA;IACAC;MACAC;QACA;MACA,CAFA,EAEAC,IAFA,CAEAC;QACA;QACA;MAEA,CANA,EAMAC,KANA,CAMAC;QACAC;MACA,CARA;IASA;;EA3FA,CA/EA;;EA6KAC;IACA;IACA,qCAFA,CAGA;EACA;;AAjLA","names":["name","data","parsed","timetable","days","period","courses","methods","dayToNumber","initTimetable","courseCode","color","span","updateTimetable","times","day","start","end","element","getElement","getCourses","fetch","then","json","catch","err","console","mounted"],"sourceRoot":"src/components/home","sources":["Timetable.vue"],"sourcesContent":["<template>\n    <div id=\"timetable\">\n        <h1>Working Timetable (2022 Autumn Semester)</h1>\n        <table v-animate-onscroll=\"'animated fadeIn'\">\n            <!-- The date of the timetable -->\n            <thead>\n                <tr>\n                    <th></th>\n                    <th v-for=\"(d, index) in days\" :key=\"index\">{{d}}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(t, t_index) in period\" :key=\"t_index\">\n                    <!-- Time period -->\n                    <td>{{t}}</td>\n                    <!-- Course -->\n                    <template v-for=\"(d, d_index) in days\">\n                        <td \n                            :key=\"d_index\"\n                            v-if=\"getElement('repeat', t_index, d_index)\"\n                            :rowspan=\"getElement('span', t_index, d_index)\"\n                            :style=\"{ backgroundColor: getElement('color', t_index, d_index)}\"\n                        >\n                            {{getElement('courseCode', t_index, d_index)}}\n                        </td>\n                    </template>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nexport default {\n    name:'Timetable',\n    data() {\n        return {\n            // To determine whenever the timetable matrix is parsed or not\n            parsed: false,\n            // The timetable 2D matrix\n            timetable: [[]],\n            // The days in a week\n            days:['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n            // The time period\n            period:[\n                '0830-0930', '0930-1030', '1030-1130', '1130-1230', '1230-1330',\n                '1330-1430', '1430-1530', '1530-1630', '1630-1730', '1730-1830'\n            ],\n            // courses information  (save in database)\n            courses: [],\n            // courses: [\n            //     // CSCI3130\n            //     {\n            //         courseCode:'CSCI3130',\n            //         times:[\n            //             {day:'Mo', start:'1630', end:'1815'},\n            //             {day:'Tu', start:'1630', end:'1715'},\n            //             {day:'Th', start:'1730', end:'1815'}\n            //         ],\n            //         color: '#F3B03D'\n            //     },\n            //     // CSCI3150\n            //     {\n            //         courseCode:'CSCI3150',\n            //         times:[\n            //             {day:'Tu', start:'1230', end:'1415'},\n            //             {day:'We', start:'1030', end:'1115'},\n            //             {day:'Th', start:'1630', end:'1715'}\n            //         ],\n            //         color: '#D5D5D5'\n            //     },\n            //     // CSCI3160\n            //     {\n            //         courseCode:'CSCI3160',\n            //         times:[\n            //             {day:'We', start:'1130', end:'1315'},\n            //             {day:'Th', start:'1130', end:'1215'},\n            //             {day:'Th', start:'1330', end:'1415'}\n            //         ],\n            //         color: '#71C0F9'\n            //     },\n            //     // ESTR3108\n            //     {\n            //         courseCode:'ESTR3108',\n            //         times:[\n            //             {day:'Tu', start:'1430', end:'1615'},\n            //             {day:'We', start:'1730', end:'1815'},\n            //             {day:'Th', start:'0930', end:'1115'}\n            //         ],\n            //         color:'#F19BC8'\n            //     },\n            //     // UGEB2530\n            //     {\n            //         courseCode:'UGEB2530',\n            //         times:[{day:'We', start:'1430', end:'1715'}],\n            //         color: '#97F9EA'\n            //     },\n            //     // UGEC2945\n            //     {\n            //         courseCode:'UGEC2945',\n            //         times:[{day:'Mo', start:'1430', end:'1615'}],\n            //         color: '#A5F66A'\n            //     },\n            //     // GEWS1000\n            //     {\n            //         courseCode:'GEWS1000',\n            //         times:[{day:'Fr', start:'1130', end:'1315'}],\n            //         color: '#FDEF71'\n            //     }\n            // ]\n        }\n    },\n    methods: {\n        // Transfer the days to specific numbers\n        dayToNumber(day){\n            switch (day) {\n                case 'Mo':\n                    return 1\n                case 'Tu':\n                    return 2\n                case 'We':\n                    return 3\n                case 'Th':\n                    return 4\n                case 'Fr':\n                    return 5\n                case 'Sa':\n                    return 6\n                case 'Su':\n                    return 7\n                default:\n                    return -1\n            }\n        },\n\n        // Initalise the timetable array\n        initTimetable(){\n            let element = {courseCode: '', color: 'transparent', span: 1}\n            for(let i = 0; i < 10; i++){\n                this.timetable[i] = []\n                for(let j = 0; j < 5; j++){\n                    this.timetable[i][j] = element\n                }\n            }\n            // update the timetable matrix\n            this.updateTimetable()\n        },\n\n        // Get the courses data and place the event into timetable matrix\n        updateTimetable(){\n            this.courses.forEach(c => {   // for each courses\n                let {courseCode, times, color} = c\n                times.forEach(t => {    // for each course period\n                    let {day, start, end} = t\n\n                    start = Math.floor(parseInt(start) / 100)   // starting time represents in number\n                    end = Math.floor(parseInt(end) / 100)       // ending time represents in number\n                    day = this.dayToNumber(day)                 // day number\n\n                    let span = end - start      // number of rows have to span\n                    let element = {courseCode, color, span}     // the element in timetable matrix\n                    this.timetable[start - 8].splice(day - 1, 1, element)   // place the element into timetable matrix\n\n                    // if there is a span, set the covered element's span to 0\n                    for(let i = 1; i <= span - 1; i++){\n                        element = {courseCode: '', color: '', span: 0}\n                        this.timetable[start - 8 + i].splice(day - 1, 1, element)   // place the element into timetable matrix\n                    }\n                })\n            });\n            this.parsed = true  // the timetable was parsed\n        },\n\n        // Return the elements from timetable array\n        getElement(e, i, j){\n            if(!this.parsed){\n                return ''\n            }\n            switch (e) {\n                case 'courseCode':\n                    return this.timetable[i][j].courseCode\n                case 'color':\n                    return this.timetable[i][j].color\n                case 'span':\n                    return this.timetable[i][j].span\n                case 'repeat':\n                    return this.timetable[i][j].span !== 0\n                default:\n                    return null\n            }\n        },\n\n        // [Ajax Req] Get courses information\n        getCourses(){\n            fetch('http://127.0.0.1:8081/timetable').then(res => {\n                return res.json()\n            }).then(json => {\n                // console.log(json)\n                this.courses = json\n                \n            }).catch(err => {\n                console.error(err)\n            })\n        }\n\n    },\n    mounted(){\n        this.$nextTick(this.getCourses)\n        this.$nextTick(this.initTimetable())\n        // this.getCourses()\n    }\n}\n</script>\n\n<style scoped>\n#timetable{\n    height: 500px;\n    background-image: url(../../assets/background/timetable_autumn.jpg);\n    background-color: #bfa;\n    background-repeat: no-repeat;\n    background-size: cover;\n}\nh1{\n    height: 40px;\n    font-size: 30px;\n    line-height: 80px;\n    text-align: center;\n    color: #fff;\n}\ntable{\n    border: 2px solid black;\n    margin: 50px auto;\n    opacity: 0.9;\n    background-color: rgb(222, 187, 187);\n    border-collapse: collapse;\n    font-family: 'Times New Roman', Times, serif;\n}\ntable th,\ntable td{\n    border: 1px solid black;\n    height: 30px;\n    width: 150px;\n    vertical-align: middle;\n    text-align: center;\n}\ntable th{\n    border-bottom: 2px solid black;\n    font-weight: bolder;\n}\ntable th{\n    border-bottom: 2px solid black;\n    font-weight: bolder;\n}\ntable th:first-child,\ntable td:first-child{\n    border-right: 2px solid black;\n    font-weight: bolder;\n}\n</style>"]},"metadata":{},"sourceType":"module"}