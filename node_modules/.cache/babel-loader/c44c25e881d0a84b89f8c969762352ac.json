{"ast":null,"code":"var ScrollAnimate = () => {\n  const e = e => \"string\" == typeof e,\n        t = (e, t, n = \"\") => e.className = `${t} ${n}`.trim();\n\n  return {\n    isInView: ({\n      top: e,\n      bottom: t\n    }) => e < (() => document.documentElement.clientHeight)() && t > 0,\n\n    run(n, {\n      value: i,\n      modifiers: r\n    }, {\n      isUpwards: s,\n      previousClassName: o = \"\"\n    }) {\n      if (!this.isInView(n.getBoundingClientRect())) return r.repeat && e(i) ? t(n, o) : void 0;\n      if (e(i)) return t(n, o, i);\n\n      if (r.repeat || (e => e.down && e.up)(i) || !((e = \"\", t = \"\") => e.trim() !== t.trim())(n.className, o)) {\n        const e = s ? i.up : i.down;\n        return t(n, o, e);\n      }\n\n      return (({\n        params: e,\n        isUpwards: t,\n        repeat: n\n      }) => n && (t && e.down || !t && e.up))({\n        params: i,\n        isUpwards: s,\n        ...r\n      }) ? t(n, o) : void 0;\n    }\n\n  };\n},\n    index = {\n  ScrollAnimate: ScrollAnimate,\n\n  install(e) {\n    e.directive(\"animate-onscroll\", {\n      inserted(e, t) {\n        const n = ScrollAnimate(Date.now()),\n              i = e.className;\n        let r = window.pageYOffset;\n        window.addEventListener(\"scroll\", function () {\n          let s = window.pageYOffset || document.documentElement.scrollTop;\n          const o = s < r;\n          n.run(e, t, {\n            isUpwards: o,\n            previousClassName: i\n          }), r = s <= 0 ? 0 : s;\n        }, !1);\n      }\n\n    });\n  }\n\n};\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}