{"ast":null,"code":"export default {\n  name: 'Timetable',\n\n  data() {\n    return {\n      parsed: false,\n      timetable: '',\n      days: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n      period: ['0830-0930', '0930-1030', '1030-1130', '1130-1230', '1230-1330', '1330-1430', '1430-1530', '1530-1630', '1630-1730', '1730-1830'],\n      courses: [{\n        courseCode: 'CSCI3130',\n        times: [{\n          day: 'Mo',\n          start: '1630',\n          end: '1815'\n        }, {\n          day: 'Tu',\n          start: '1630',\n          end: '1715'\n        }, {\n          day: 'Th',\n          start: '1730',\n          end: '1815'\n        }],\n        color: '#F3B03D'\n      }, {\n        courseCode: 'CSCI3150',\n        times: [{\n          day: 'Tu',\n          start: '1230',\n          end: '1415'\n        }, {\n          day: 'We',\n          start: '1030',\n          end: '1115'\n        }, {\n          day: 'Th',\n          start: '1630',\n          end: '1715'\n        }],\n        color: '#D5D5D5'\n      }, {\n        courseCode: 'CSCI3160',\n        times: [{\n          day: 'We',\n          start: '1130',\n          end: '1315'\n        }, {\n          day: 'Th',\n          start: '1130',\n          end: '1215'\n        }, {\n          day: 'Th',\n          start: '1330',\n          end: '1415'\n        }],\n        color: '#A5F66A'\n      }, {\n        courseCode: 'ESTR3108',\n        times: [{\n          day: 'Tu',\n          start: '1430',\n          end: '1615'\n        }, {\n          day: 'We',\n          start: '1730',\n          end: '1815'\n        }, {\n          day: 'Th',\n          start: '0930',\n          end: '1115'\n        }],\n        color: '#F19BC8'\n      }, {\n        courseCode: 'UGEB2530',\n        times: [{\n          day: 'We',\n          start: '1430',\n          end: '1715'\n        }],\n        color: '#71C0F9'\n      }, {\n        courseCode: 'UGEC2945',\n        times: [{\n          day: 'Mo',\n          start: '1430',\n          end: '1615'\n        }]\n      }]\n    };\n  },\n\n  methods: {\n    // Transfer the days to numbers\n    daysToIndex(day) {\n      switch (day) {\n        case 'Mo':\n          return 1;\n\n        case 'Tu':\n          return 2;\n\n        case 'We':\n          return 3;\n\n        case 'Th':\n          return 4;\n\n        case 'Fr':\n          return 5;\n\n        case 'Sa':\n          return 6;\n\n        case 'Su':\n          return 7;\n\n        default:\n          return -1;\n      }\n    },\n\n    // Initalise the Times array\n    initTimes() {\n      this.timetable = [[]];\n      let element = {\n        courseCode: '',\n        color: 'white',\n        span: 1\n      };\n\n      for (let i = 0; i < 10; i++) {\n        this.timetable[i] = [];\n\n        for (let j = 0; j < 5; j++) {\n          this.timetable[i][j] = element;\n        }\n      }\n\n      this.parseTimes();\n    },\n\n    // Add the events into Times array\n    parseTimes() {\n      this.courses.forEach(c => {\n        let {\n          courseCode,\n          times,\n          color\n        } = c;\n        times.forEach(t => {\n          let {\n            day,\n            start,\n            end\n          } = t;\n          start = Math.floor(parseInt(start) / 100);\n          end = Math.floor(parseInt(end) / 100);\n          day = this.daysToIndex(day);\n          let span = end - start;\n          let element = {\n            courseCode,\n            color,\n            span\n          };\n          this.timetable[start - 8].splice(day - 1, 1, element);\n\n          for (let i = 1; i <= span - 1; i++) {\n            element = {\n              courseCode: 'hi',\n              color: '',\n              span: 0\n            };\n            this.timetable[start - 8 + i].splice(day - 1, 1, element);\n          }\n        });\n      });\n      this.parsed = true;\n    },\n\n    // Get the elements from Times array\n    getElement(e, i, j) {\n      if (!this.parsed) {\n        return '';\n      }\n\n      switch (e) {\n        case 'courseCode':\n          return this.timetable[i][j].courseCode;\n\n        case 'color':\n          console.log(this.timetable[i][j].color);\n          return this.timetable[i][j].color;\n\n        case 'span':\n          return this.timetable[i][j].span;\n\n        case 'repeat':\n          return this.timetable[i][j].span !== 0;\n\n        default:\n          return null;\n      }\n    }\n\n  },\n\n  mounted() {\n    this.$nextTick(this.initTimes());\n  }\n\n};","map":{"version":3,"mappings":"AAiCA;EACAA,iBADA;;EAEAC;IACA;MACAC,aADA;MAEAC,aAFA;MAGAC,8DAHA;MAIAC,SACA,WADA,EACA,WADA,EACA,WADA,EACA,WADA,EACA,WADA,EAEA,WAFA,EAEA,WAFA,EAEA,WAFA,EAEA,WAFA,EAEA,WAFA,CAJA;MAQAC,UACA;QACAC,sBADA;QAEAC,QACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAF;UAAAC;UAAAC;QAAA,CAFA,EAGA;UAAAF;UAAAC;UAAAC;QAAA,CAHA,CAFA;QAOAC;MAPA,CADA,EAUA;QACAL,sBADA;QAEAC,QACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAF;UAAAC;UAAAC;QAAA,CAFA,EAGA;UAAAF;UAAAC;UAAAC;QAAA,CAHA,CAFA;QAOAC;MAPA,CAVA,EAmBA;QACAL,sBADA;QAEAC,QACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAF;UAAAC;UAAAC;QAAA,CAFA,EAGA;UAAAF;UAAAC;UAAAC;QAAA,CAHA,CAFA;QAOAC;MAPA,CAnBA,EA4BA;QACAL,sBADA;QAEAC,QACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAF;UAAAC;UAAAC;QAAA,CAFA,EAGA;UAAAF;UAAAC;UAAAC;QAAA,CAHA,CAFA;QAOAC;MAPA,CA5BA,EAqCA;QACAL,sBADA;QAEAC,QACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,CAFA;QAKAC;MALA,CArCA,EA4CA;QACAL,sBADA;QAEAC;UAAAC;UAAAC;UAAAC;QAAA;MAFA,CA5CA;IARA;EA0DA,CA7DA;;EA8DAE;IACA;IACAC;MACA;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;MAhBA;IAkBA,CArBA;;IAuBA;IACAC;MACA;MACA;QAAAR;QAAAK;QAAAI;MAAA;;MACA;QACA;;QACA;UACA;QACA;MACA;;MACA;IACA,CAlCA;;IAoCA;IACAC;MACA;QACA;UAAAV;UAAAC;UAAAI;QAAA;QACAJ;UACA;YAAAC;YAAAC;YAAAC;UAAA;UACAD;UACAC;UACAF;UACA;UAEA;YAAAF;YAAAK;YAAAI;UAAA;UAEA;;UAEA;YACAE;cAAAX;cAAAK;cAAAI;YAAA;YACA;UACA;QACA,CAfA;MAgBA,CAlBA;MAmBA;IACA,CA1DA;;IA4DA;IACAG;MACA;QACA;MACA;;MACA;QACA;UACA;;QACA;UACAC;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;MAXA;IAaA;;EA9EA,CA9DA;;EA+IAC;IACA;EACA;;AAjJA","names":["name","data","parsed","timetable","days","period","courses","courseCode","times","day","start","end","color","methods","daysToIndex","initTimes","span","parseTimes","element","getElement","console","mounted"],"sourceRoot":"src/components","sources":["Timetable.vue"],"sourcesContent":["<template>\n    <div id=\"timetable\">\n        <h1>Working Timetable (2022 Autumn Semester)</h1>\n        <table>\n            <!-- The date of the timetable -->\n            <thead>\n                <tr>\n                    <th></th>\n                    <th v-for=\"(d, index) in days\" :key=\"index\">{{d}}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(t, t_index) in period\" :key=\"t_index\">\n                    <!-- Time period -->\n                    <td>{{t}}</td>\n                    <!-- Course -->\n                    <template v-for=\"(d, d_index) in days\">\n                        <td \n                            :key=\"d_index\"\n                            v-if=\"getElement('repeat', t_index, d_index)\"\n                            :rowspan=\"getElement('span', t_index, d_index)\"\n                            :style=\"{ backgroundColor: getElement('color', t_index, d_index)}\"\n                        >\n                            {{getElement('courseCode', t_index, d_index)}}\n                        </td>\n                    </template>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nexport default {\n    name:'Timetable',\n    data() {\n        return {\n            parsed: false,\n            timetable: '',\n            days:['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n            period:[\n                '0830-0930', '0930-1030', '1030-1130', '1130-1230', '1230-1330',\n                '1330-1430', '1430-1530', '1530-1630', '1630-1730', '1730-1830'\n            ],\n            courses: [\n                {\n                    courseCode:'CSCI3130',\n                    times:[\n                        {day:'Mo', start:'1630', end:'1815'},\n                        {day:'Tu', start:'1630', end:'1715'},\n                        {day:'Th', start:'1730', end:'1815'}\n                    ],\n                    color: '#F3B03D'\n                },\n                {\n                    courseCode:'CSCI3150',\n                    times:[\n                        {day:'Tu', start:'1230', end:'1415'},\n                        {day:'We', start:'1030', end:'1115'},\n                        {day:'Th', start:'1630', end:'1715'}\n                    ],\n                    color: '#D5D5D5'\n                },\n                {\n                    courseCode:'CSCI3160',\n                    times:[\n                        {day:'We', start:'1130', end:'1315'},\n                        {day:'Th', start:'1130', end:'1215'},\n                        {day:'Th', start:'1330', end:'1415'}\n                    ],\n                    color: '#A5F66A'\n                },\n                {\n                    courseCode:'ESTR3108',\n                    times:[\n                        {day:'Tu', start:'1430', end:'1615'},\n                        {day:'We', start:'1730', end:'1815'},\n                        {day:'Th', start:'0930', end:'1115'}\n                    ],\n                    color:'#F19BC8'\n                },\n                {\n                    courseCode:'UGEB2530',\n                    times:[\n                        {day:'We', start:'1430', end:'1715'}\n                    ],\n                    color: '#71C0F9'\n                },\n                {\n                    courseCode:'UGEC2945',\n                    times:[{day:'Mo', start:'1430', end:'1615'}]\n                }\n            ]\n        }\n    },\n    methods: {\n        // Transfer the days to numbers\n        daysToIndex(day){\n            switch (day) {\n                case 'Mo':\n                    return 1\n                case 'Tu':\n                    return 2\n                case 'We':\n                    return 3\n                case 'Th':\n                    return 4\n                case 'Fr':\n                    return 5\n                case 'Sa':\n                    return 6\n                case 'Su':\n                    return 7\n                default:\n                    return -1\n            }\n        },\n\n        // Initalise the Times array\n        initTimes(){\n            this.timetable = [[]]\n            let element = {courseCode: '', color: 'white', span: 1}\n            for(let i = 0; i < 10; i++){\n                this.timetable[i] = []\n                for(let j = 0; j < 5; j++){\n                    this.timetable[i][j] = element\n                }\n            }\n            this.parseTimes()\n        },\n\n        // Add the events into Times array\n        parseTimes(){\n            this.courses.forEach((c) => {\n                let {courseCode, times, color} = c\n                times.forEach(t => {\n                    let {day, start, end} = t\n                    start = Math.floor(parseInt(start) / 100)\n                    end = Math.floor(parseInt(end) / 100)\n                    day = this.daysToIndex(day)\n                    let span = end - start\n\n                    let element = {courseCode, color, span}\n\n                    this.timetable[start - 8].splice(day - 1, 1, element)\n\n                    for(let i = 1; i <= span - 1; i++){\n                        element = {courseCode: 'hi', color: '', span: 0}\n                        this.timetable[start - 8 + i].splice(day - 1, 1, element)\n                    }\n                })\n            });\n            this.parsed = true\n        },\n\n        // Get the elements from Times array\n        getElement(e, i, j){\n            if(!this.parsed){\n                return ''\n            }\n            switch (e) {\n                case 'courseCode':\n                    return this.timetable[i][j].courseCode\n                case 'color':\n                    console.log(this.timetable[i][j].color)\n                    return this.timetable[i][j].color\n                case 'span':\n                    return this.timetable[i][j].span\n                case 'repeat':\n                    return this.timetable[i][j].span !== 0\n                default:\n                    return null\n            }\n        },\n\n    },\n    mounted(){\n        this.$nextTick(this.initTimes())\n    }\n}\n</script>\n\n<style>\n#timetable{\n    height: 500px;\n    background-image: url(../assets/background/timetable_autumn.jpg);\n    background-size: cover;\n    background-repeat: no-repeat;\n}\nh1{\n    height: 40px;\n    font-size: 30px;\n    line-height: 80px;\n    text-align: center;\n    color: #fff;\n}\ntable{\n    border: 2px solid black;\n    margin: 50px auto;\n    border-collapse: collapse;\n    font-family: 'Times New Roman', Times, serif;\n}\ntable th,\ntable td{\n    background-color: #fff;\n    border: 1px solid black;\n    height: 30px;\n    width: 150px;\n    vertical-align: middle;\n    text-align: center;\n}\ntable th{\n    border-bottom: 2px solid black;\n    font-weight: bolder;\n}\ntable th{\n    border-bottom: 2px solid black;\n    font-weight: bolder;\n}\ntable th:first-child,\ntable td:first-child{\n    border-right: 2px solid black;\n    font-weight: bolder;\n}\ntable .timetable_01{\n    background-color: rgb(147, 255, 301);\n}\n</style>"]},"metadata":{},"sourceType":"module"}